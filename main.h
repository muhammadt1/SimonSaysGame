#include "stm32f10x.h"
#include <stdlib.h> 

/*
	LED1 through LED4 turn on specific LEDs by setting bits in the ODR.
*/
void LED1On();
void LED2On(); 
void LED3On(); 
void LED4On(); 

/*
	LED1 through LED4 turn off specific LEDs by clearing bits in the ODR.
*/
void LED1Off(); 
void LED2Off(); 
void LED3Off(); 
void LED4Off(); 

/*
	Sets up the GPIO pins by enabling the GPIOA, GPIOB clocks. Configures pin modes throgh CRL and CRH
*/
void initilization();

/*
	Delay used throughout the program, made via nested loops.
*/
void delay(int time);

/*
	Functions that are in charge of turning off all the leds and turning on all leds.
*/
void all_leds_off();
void all_leds_on();

/*
	Incharge of the knight rider sequence.
	Waits for any button to be pushed to begin the rounds of the game.
*/
unsigned int waitStart();

/*
	Function from the lab, generates random numbers ranging from 0-3 for led selection.
	Uses the seed for randomizing,
*/
int randomNumberTo4(unsigned int seed);

/*
	Shows the pattern thats generated by lighting up the leds in sequence.
	Each led stays on for 1 second with 1 second gap in between patterns.
*/
void patternDisplay(int *pattern, int size);

/*
	Waits for a button press.
	Checks if the pressed buttons match the pattern that was outputted.
	Has a 5 second timeout for each input.
	Returns seed if value if input matches, 0 if wrong.
*/
unsigned int buttonCheck(int *pattern, int size);

/*
	These functions are in charge of displaying appropriate patterns for winning and losing.
*/
void gameOver();
void gameWon();

/*
	Displays the final score using leds, via the binary format. The MSB is A0 and LSB is A3. 
*/
void binaryResult(int score);

/*
	Checks if any button is currently pressed.
	Returns 1 if pressed, 0 if not.
*/
int activeButtonCheck();
